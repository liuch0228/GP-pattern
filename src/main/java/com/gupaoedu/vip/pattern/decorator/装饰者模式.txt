装饰者模式是指在不改变原有对象的基础之上,将功能附加到对象上,提供了
比继承更有弹性的替代方案(扩展原有对象的功能)
属于结构型模式
使用场景:
1.用于扩展一个类的功能或者给一个类添加附加职责
2.动态地给一个对象添加功能,这些功能可以再动态地撤销

要点：无论怎么包装，本质不变
jdk中的装饰者模式：
BufferedReader
TransactionAwareCacheDecorator
HttpHeadResponseDecorator
org.apache.ibatis.cache.Cache 的实现org.apache.ibatis.cache.decorators.FifoCache
org.apache.ibatis.cache.decorators.TransactionalCache
org.apache.ibatis.cache.decorators.LruCache等

装饰者模式的优点：
1.装饰着是继承的有力补充，比继承灵活，不改变原有对象的情况下
动态的给一个对象扩展功能，即插即用
2.通过使用不同装饰类以及这些装饰类的排列组合，可以实现不同效果
3.装饰者完全遵守开闭原则
缺点：
会出现更多的代码，更多的类，增加程序复杂性
动态装饰时，多层装饰时会更复杂